import asyncio

from aiogram import types
from aiogram.dispatcher.filters.builtin import CommandStart
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.callback_data import CallbackData

from keyboards.inline.menu_keyboards import create_feed_markup, create_feed_callback
from loader import dp
from utils.db_api.db_queries.telegram_user import TelegramUser
from utils.strings import messages_text as msg

get_started_text = "–ù–∞—á–∞—Ç—å üöÄ"
user_channels_text = "üóÇ –ú–æ–∏ –∫–∞–Ω–∞–ª—ã"
developer_text = "üë®‚Äçüíª –ù–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É"
how_to_use_text = "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –Ω–∞ –≤—Å–µ üíØ"

how_to_subscribe_text = "–î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞, <b>–ø–µ—Ä–µ—à–ª–∏ –º–Ω–µ –∏–∑ –Ω–µ–≥–æ –ª—é–±–æ–π –ø–æ—Å—Ç</b> –∏–ª–∏ –µ–≥–æ @username\n\n"


add_channels_callback = CallbackData("add_channels")

def get_started_markup() -> ReplyKeyboardMarkup():
    markup = ReplyKeyboardMarkup(keyboard=[
        [
            KeyboardButton(get_started_text)
        ]
    ])
    return markup


def get_add_channels_markup():
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª—ã", callback_data=add_channels_callback.new())
        ]
    ])
    return markup

def get_menu_markup() -> ReplyKeyboardMarkup():
    markup = ReplyKeyboardMarkup(keyboard=[
        [
            KeyboardButton(user_channels_text),
            KeyboardButton(developer_text)
        ],
        [
            KeyboardButton(how_to_use_text)
        ]
    ], resize_keyboard=True)
    return markup


@dp.message_handler(CommandStart())
async def bot_start(message: types.Message):
    telegram_id = message.from_user.id
    deep_link = message.get_args()
    username = message.from_user.username
    user = TelegramUser(telegram_id)
    user_created = await user.add(username=username, deep_link=deep_link)
    if not user_created:
        # If launched bot before
        await message.answer("–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!", reply_markup=get_menu_markup())
        return
    markup = create_feed_markup()
    await message.answer(msg.hello_user(message.from_user.first_name), reply_markup=markup)
    # await message.answer("–ì–ª–µ–±–∞ —Å–∞–º—ã–π –∂—ë—Å—Ç–∫–∏–π")

@dp.callback_query_handler(create_feed_callback.filter())
async def create_feed_handler(call: types.CallbackQuery):
    await call.message.delete_reply_markup()
    await asyncio.sleep(0.5)
    await call.message.answer("–ß—Ç–æ–±—ã –±–æ—Ç –Ω–∞—á–∞–ª —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ª–µ–Ω—Ç—É –Ω–æ–≤–æ—Å—Ç–µ–π, –¥–æ–±–∞–≤—å—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–∞—Å –∫–∞–Ω–∞–ª—ã.\n\n"
                              "–î–ª—è —ç—Ç–æ–≥–æ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:\n"
                              "1. –ó–∞–π–¥–∏—Ç–µ –≤ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —á–∞—Ç–æ–≤\n"
                              "2. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–∞–Ω–∞–ª, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ –ª–µ–Ω—Ç—É\n"
                              "3. –ü–µ—Ä–µ—à–ª–∏—Ç–µ –≤ ¬´<b>FEEDME ‚Äî –ú–æ—è –ª–µ–Ω—Ç–∞</b>¬ª –∏–∑ –∫–∞–Ω–∞–ª–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
                              " (–∏–ª–∏ –ø—Ä–∏—à–ª–∏—Ç–µ –µ–≥–æ @username)\n"
                              "–ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –≤—Å–µ –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –±—É–¥—É—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è –≤ FEEDME!"
                              "\n\n‚ùóÔ∏è<b>–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –≤ FEEDME –Ω–µ–ª—å–∑—è –¥–æ–±–∞–≤–ª—è—Ç—å "
                              "–ª–∏—á–Ω—ã–µ —á–∞—Ç—ã –∏ —á–∞—Ç—ã –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –¥—Ä—É–≥–∏–º–∏ –ª—é–¥—å–º–∏</b>")
    await call.message.answer_chat_action(types.ChatActions.TYPING)
    await asyncio.sleep(8)
    await call.message.answer("<b>–í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ 50 –∫–∞–Ω–∞–ª–æ–≤</b>. –ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤ –≤ –ª–µ–Ω—Ç—É, –º–æ–∂–Ω–æ"
                              " –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –Ω–∏—Ö –∏–ª–∏ –∑–∞–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∏—Ö, –≤–µ–¥—å –≤—Å–µ –Ω–æ–≤–æ—Å—Ç–∏ –±—É–¥—É—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è –∑–¥–µ—Å—å!")
    await call.message.answer_chat_action(types.ChatActions.TYPING)
    await asyncio.sleep(5)
    await call.message.answer("<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –∫–∞–Ω–∞–ª—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è:</b>")


@dp.message_handler(text=get_started_text)
async def instructions_message_handler(message: types.Message):
    markup = get_menu_markup()
    await message.answer(how_to_subscribe_text, reply_markup=markup)
